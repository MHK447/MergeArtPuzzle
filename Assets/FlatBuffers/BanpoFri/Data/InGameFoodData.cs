// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace BanpoFri.Data
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct InGameFoodData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static InGameFoodData GetRootAsInGameFoodData(ByteBuffer _bb) { return GetRootAsInGameFoodData(_bb, new InGameFoodData()); }
  public static InGameFoodData GetRootAsInGameFoodData(ByteBuffer _bb, InGameFoodData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public InGameFoodData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Foodidx { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateFoodidx(int foodidx) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, foodidx); return true; } else { return false; } }
  public int Mergegrade { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateMergegrade(int mergegrade) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, mergegrade); return true; } else { return false; } }

  public static Offset<BanpoFri.Data.InGameFoodData> CreateInGameFoodData(FlatBufferBuilder builder,
      int foodidx = 0,
      int mergegrade = 0) {
    builder.StartTable(2);
    InGameFoodData.AddMergegrade(builder, mergegrade);
    InGameFoodData.AddFoodidx(builder, foodidx);
    return InGameFoodData.EndInGameFoodData(builder);
  }

  public static void StartInGameFoodData(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFoodidx(FlatBufferBuilder builder, int foodidx) { builder.AddInt(0, foodidx, 0); }
  public static void AddMergegrade(FlatBufferBuilder builder, int mergegrade) { builder.AddInt(1, mergegrade, 0); }
  public static Offset<BanpoFri.Data.InGameFoodData> EndInGameFoodData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<BanpoFri.Data.InGameFoodData>(o);
  }
  public InGameFoodDataT UnPack() {
    var _o = new InGameFoodDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(InGameFoodDataT _o) {
    _o.Foodidx = this.Foodidx;
    _o.Mergegrade = this.Mergegrade;
  }
  public static Offset<BanpoFri.Data.InGameFoodData> Pack(FlatBufferBuilder builder, InGameFoodDataT _o) {
    if (_o == null) return default(Offset<BanpoFri.Data.InGameFoodData>);
    return CreateInGameFoodData(
      builder,
      _o.Foodidx,
      _o.Mergegrade);
  }
}

public class InGameFoodDataT
{
  [Newtonsoft.Json.JsonProperty("foodidx")]
  public int Foodidx { get; set; }
  [Newtonsoft.Json.JsonProperty("mergegrade")]
  public int Mergegrade { get; set; }

  public InGameFoodDataT() {
    this.Foodidx = 0;
    this.Mergegrade = 0;
  }
}


static public class InGameFoodDataVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Foodidx*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Mergegrade*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
